@Library("jenlib@ebrains-4.0") _

try {
	Map<String, Object> commonPipelineOptions = [
			projects           : ["hxtorch"],
			moduleOptions      : [modules: ["ppu-toolchain"]],
			setupOptions       : "--release-branch=ebrains-4.0",
			notificationChannel: "#jenkins-trashbin"  // success is checked globally
	]

	Map<String, Object> pipelineDeploymentOptions = [
			container              : [app: "dls-nodev"],
			configureInstallOptions: "--build-profile=release_with_debug"
	]  << commonPipelineOptions

	Map<String, Object> pipelineNoDeploymentOptions = [
			container              : [app: "dls-core"],
			configureInstallOptions: "--build-profile=ci",
			testSlurmResource: [partition: "cube", wafer: 62, "fpga-without-aout": 3],
			preTestHook      : { configureHxCubeBitfile() },
			testOptions      : "--test-execall -j1",
			postTestHook     : { archiveArtifacts artifacts: "hxtorch/tests/hw/plots/*", allowEmptyArchive: true },
	] << commonPipelineOptions

	boolean deploy = env.GERRIT_EVENT_TYPE == "change-merged"

	Map<String, Object> pipelineOptions = deploy ? pipelineDeploymentOptions : pipelineNoDeploymentOptions

	withCcache() {
		wafDefaultPipeline(pipelineOptions)
	}

	conditionalStage(name: "Module Deployment", skip: !deploy) {
		runOnSlave(label: "frontend") {
			inSingularity(app: "dls-nodev") {
				deployModule([name: "hxtorch", source: "bin/ lib/ include/ share/ repos_log.txt"])
			}
		}
	}
} catch (Throwable t) {
	notifyFailure(mattermostChannel: "#dls-software")
	throw t
}

if (currentBuild.currentResult != "SUCCESS") {
	notifyFailure(mattermostChannel: "#dls-software")
}
